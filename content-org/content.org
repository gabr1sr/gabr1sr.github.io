#+hugo_base_dir: ../
#+hugo_weight: auto
#+hugo_auto_set_lastmod: t

# =C-c .= insert timestamp
# =C-c C-x p= insert property

* Emacs :@emacs:
Posts related to Emacs.

** Erlang and Elixir support for Emacs :emacs:erlang:elixir:lsp:
:PROPERTIES:
:EXPORT_FILE_NAME: erlang-elixir-support-for-emacs
:EXPORT_DATE: <2023-10-09 seg 06:56>
:END:

This is a simple tutorial of how to add Erlang and Elixir support for Emacs.

*** Erlang LSP
First, let's start with the Language Server Protocol for Erlang.

Make sure you have [[https://github.com/erlang/otp#installation][Erlang]] and [[https://rebar3.org/docs/getting-started/#installing-from-the-rebar3-escript][Rebar3]] installed, download and compile [[https://github.com/erlang-ls/erlang_ls][erlang_ls]]:
#+begin_src sh
git clone https://github.com/erlang-ls/erlang_ls
cd erlang_ls
make
#+end_src

You can choose if you want to install to the default path ~/usr/local/bin~:
#+begin_src sh
make install
#+end_src

Or install to a custom directory using the ~PREFIX~ environment variable:
#+begin_src sh
PREFIX=/path/to/dir make install
#+end_src

Just make sure the installation path is in your ~PATH~ environment variable.

*** Elixir LSP
Now, you need [[https://elixir-lang.org/install.html][Elixir]] installed.

Then download and compile [[https://github.com/elixir-lsp/elixir-ls][elixir-ls]]:
#+begin_src sh
git clone https://github.com/elixir-lsp/elixir-ls
cd elixir-ls
MIX_ENV=prod mix do deps.get, compile
#+end_src

And install to the default path ~elixir-ls/release~:
#+begin_src sh
MIX_ENV=prod mix elixir_ls.release
#+end_src

Or to a custom directory:
#+begin_src sh
MIX_ENV=prod mix elixir_ls.release -o ~/.local/bin
#+end_src

Remember: the installation path must be in your ~PATH~ environment variable.

*** Erlang support for Emacs
Open your Emacs config file and install the [[https://www.erlang.org/doc/man/erlang.el.html][erlang.el]] package:
#+begin_src emacs-lisp
(use-package erlang
  :ensure t
  :hook (erlang-mode . eglot-ensure))
#+end_src

Notice we added ~:hook (erlang-mode . eglot-ensure)~ to use Eglot (LSP client for Emacs, built-in since version 29).

Eglot already use erlang_ls for erlang.el[fn:1].

*** Elixir support for Emacs
We are going to use the Emacs 29 built-in Tree-Sitter for Elixir support. If your version is lower than 29, consider using [[https://github.com/elixir-editors/emacs-elixir][elixir-mode]].

First, we need to tell built-in Tree-Sitter the languages we want to install. So open add these lines to your Emacs config file:
#+begin_src emacs-lisp
(setq treesit-source-alist
      '((elixir "https://github.com/elixir-lang/tree-sitter-elixir")
	(heex "https://github.com/phoenixframework/tree-sitter-heex")))
#+end_src

You can eval this line using the command ~C-M-x~ or ~M-x eval-defun~.

Then, run ~M-x treesit-install-language-grammar~ and install both ~heex~ and ~elixir~ language grammar (you will need a C Compiler and Make).

Now let's config [[https://github.com/wkirschbaum/elixir-ts-mode][elixir-ts-mode]] and [[https://github.com/wkirschbaum/heex-ts-mode][heex-ts-mode]]:
#+begin_src emacs-lisp
(use-package elixir-ts-mode
  :ensure t
  :hook (elixir-ts-mode . eglot-ensure))

(use-package heex-ts-mode
  :ensure t
  :hook (heex-ts-mode . eglot-ensure))
#+end_src

If you are using Emacs 30+, you can ommit the ~:ensure t~ of these 2 packages because they are built-in[fn:2].

And, to complete this post, we can setup the LSP for Elixir using Eglot (you don't need to do this if you are using Emacs 30+):
#+begin_src emacs-lisp
(add-to-list 'eglot-server-programs
	     '((elixir-ts-mode heex-ts-mode) . ("language_server.sh")))
#+end_src

For Windows, just use ~language_server.bat~ instead of ~language_server.sh~.

That's it.

* Footnotes
[fn:2] https://github.com/emacs-mirror/emacs/blob/63a6fb2a7a02ca88835c3fd473894d3b7d39ff15/etc/NEWS#L859 

[fn:1] https://github.com/emacs-mirror/emacs/blob/c55e22c418048463a83e6b0e29c727c4f7b09545/lisp/progmodes/eglot.el#L264 
